Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.

------------------------------------

Solution 1 - 
TC - O(m * n) where m = strs.length and n - min(length of strings)
SC - O(1)

class Solution {
    public String longestCommonPrefix(String[] strs) {
        StringBuffer res = new StringBuffer();
        
        if(strs == null || strs.length == 0)
            return res.toString();
        
        for(int i = 0; i < strs[0].length(); i++)
        {
            char c = strs[0].charAt(i);
            
            for(int j = 1; j < strs.length; j++)
            {
                if(i >= strs[j].length() || c != strs[j].charAt(i))
                {
                    return res.toString();
                }
            }
            res.append(c);
        }
        return res.toString();
    }
}

